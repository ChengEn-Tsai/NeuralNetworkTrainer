@inject ISnackbar Snackbar
@inject IDialogService DialogService

<div style="display: flex; justify-content: center; align-items: center; height: 100%;">
    <MudPaper class="d-flex flex-column" Style="box-shadow: none;">
        <div class="d-flex flex-column my-5">
            <MudButton Disabled="disabled" Class="mx-5" Color="Color.Tertiary" Variant="Variant.Filled" @onclick="OpenInputParameterDialogAsync">Input Parameters</MudButton>
        </div>
        <div class="d-flex flex-column my-5" style="text-align: center; margin: 10px;">
            @if (SelectedLabel != "")
            {
                <p><span style="color: darkorange">Selected Label:</span> @SelectedLabel</p>
            }
            @if (string.Join(", ", FeaturesSelector) != "")
            {
                <p><span style="color: darkorange">Features Selector:</span> @string.Join(", ", FeaturesSelector)</p>
            }
        </div>
        <div class="d-flex flex-column my-5">
            <MudButton Disabled="disabled" Class="mx-5" Color="Color.Tertiary" Variant="Variant.Filled" @onclick="OpenNeuralNetworkParameterDialogAsync">Neural Network Parameters</MudButton>
            
        </div>
    </MudPaper>
</div>
<!--
<div style="display: flex; justify-content: center; align-items: center; height: 100%;">
    <MudButton Class="mx-5" Color="Color.Tertiary" Variant="Variant.Filled" @onclick="openInputParameterBox">Input Parameters</MudButton>
    <MudButton Class="mx-5" Color="Color.Tertiary" Variant="Variant.Filled" @onclick="openNeuralNetworkParameterBox">Neural Network Parameters</MudButton>

</div>
-->

@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string? SelectedLabel { get; set; }

    [Parameter]
    public IEnumerable<string>? FeaturesSelector { get; set; }

    [Parameter]
    public Action<string, IEnumerable<string>>? changeLabelAndFS { get; set; }

    [Parameter]
    public Action<NNTParameterDialog.NNTParameters> changeNNTParameter { get; set; }

    [Parameter]
    public NNTParameterDialog.NNTParameters Parameters { get; set; } = new NNTParameterDialog.NNTParameters();

    private bool disabled => Id == -1;
    private string inputParameterKey => "inputParameterKey" + Id;
    private string NNTParameterKey => "NNTParameterKey" + Id;

    private Task OpenInputParameterDialogAsync()
    {
        var options = new DialogOptions { BackgroundClass = "my-custom-class" };
        var parameters = new DialogParameters
        {
            { "id", Id },
            { "changeLabelAndFS", changeLabelAndFS },
            { "Label", SelectedLabel },
            { "FeatureSelector", FeaturesSelector }
        };
        return DialogService.ShowAsync<InputParameterDialog>("Input Parameters", parameters, options);
    }


    private Task OpenNeuralNetworkParameterDialogAsync()
    {
        var options = new DialogOptions { BackgroundClass = "my-custom-class", FullScreen = true };
        var parameters = new DialogParameters
        {
            {"Parameters", Parameters },
            {"changeNNTParameter", changeNNTParameter}
        };
        return DialogService.ShowAsync<NNTParameterDialog>("Input Parameters", parameters, options);

    }
}
