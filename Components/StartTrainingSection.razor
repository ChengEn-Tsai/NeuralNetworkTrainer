@using DotNetAssignment2.Models

@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager NavManager


<div style="display: flex; justify-content: center; align-items: center; height: 100%;">
    <MudButton Class="mx-5" Color="Color.Success" @onclick="startTraining" Variant="Variant.Filled">Train!</MudButton>
</div>

@code {
    // FilePath="@FilePath"
    //     Label="@selectedLabel"
    //     FeaturesSelector="@string.Join(",", selectedFeaturesSelector)"
    //     NNTParameters="@nNTParameters"

    [Parameter]
    public string? FilePath { get; set; }

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public string? FeaturesSelector { get; set; }

    [Parameter]
    public NNTParameterDialog.NNTParameters NNTParameters { get; set; }

    private TrainingForm trainingForm = new TrainingForm();

    private async Task startTraining()
    {
        Console.WriteLine("======FilePath");
        Console.WriteLine(FilePath);
        if (FilePath == "")
        {
            Snackbar.Add("Please upload a CSV file.", Severity.Error);
        } else
        {
            trainingForm.FilePath = FilePath;
            trainingForm.Label = Label;
            trainingForm.FeatureSelector = FeaturesSelector;
            trainingForm.Epoch = NNTParameters.Epoch;
            trainingForm.BatchSize = NNTParameters.BatchSize;
            trainingForm.Optimizer = NNTParameters.Optimizer;
            trainingForm.TypeOfTraining = NNTParameters.TypeOfTraining;

            foreach (var layer in NNTParameters.Layers)
            {
                trainingForm.Layers.Add(layer.name + "," + layer.P1 + "," + layer.P2);
            }

            var response = await Http.PostAsJsonAsync("api/NeuralNetwork/start", trainingForm);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<dynamic>();
                Snackbar.Add($"Training started!", Severity.Success);
                NavManager.NavigateTo("/train/Processing");
            }
            else
            {
                Snackbar.Add("Failed to start training.", Severity.Error);
            }
        }
        
    }
}
